# Nagios Service Definitions.
#
# Automatically generated by Chef.

define service {
    use                 default-service
    host_name           *
    service_description ping
    check_command       check_ping!200.0,20%!500.0,60%
}

# monitoring service checks
define service {
    service_description Nagios
    hostgroup_name      <%= node['nagios']['server_role'] %>
    check_command       check-nagios
    contact_groups      admins
    use                 default-service
}

# Uncomment if you're using Munin
#define service {
#    service_description Munin Client
#    hostgroup_name      all
#    check_command       check_tcp!4949
#    use                 default-service
#}

# default checks for all hosts
# Uncomment if you're running chef-client as a daemon
#define service {
#    service_description Chef Client
#    hostgroup_name     base
#    check_command      check_chef_client
#    use                default-service
#}

define service {
    service_description Free Space All Disks
    hostgroup_name      all
    check_command       check_all_disks
    use                 default-service
}

define service {
    service_description Load Average
    hostgroup_name      all
    check_command       check_load
    use                 default-service
}

define service {
    service_description Free Memory
    hostgroup_name      all
    check_command       check_mem
    use                 default-service
}

define service {
    service_description SSH
    hostgroup_name      all
    check_command       check_ssh
    use                 default-service
}

define service {
    service_description Processes
    hostgroup_name      all
    check_command       check_local_procs
    use                 default-service
}

define service {
    service_description chef-client
    hostgroup_name      all
    check_command       check_nrpe!check_chef_client
    use                 default-service
}


<% unless @service_hosts['monitoring'].nil? -%>
# If the monitoring host is a postfix relay, uncomment this.
#define service {
#    service_description Postfix
#    hostgroup_name      monitoring
#    check_command       check_nrpe!check_smtp
#    use                 default-service
#}

# If the monitoring host is a syslog server, uncomment this.
#define service {
#    service_description Rsyslog
#    hostgroup_name      monitoring
#    check_command       check_tcp!514
#    use                 default-service
#}

<% end -%>
<% unless @service_hosts['nova-mysql-server'].nil? -%>
# basic check if the database_master role is a mysql server
# database_master service checks
define service {
    service_description MySQL
    hostgroup_name      nova-mysql-server
    check_command       check_nrpe!check_mysql_server
    use                 default-service
}

<% end -%>
<% unless @service_hosts['nova-rabbitmq-server'].nil? -%>
# basic check if the database_master role is a mysql server
# database_master service checks
define service {
    service_description RabbitMQ
    hostgroup_name      nova-rabbitmq-server
    check_command       check_nrpe!check_rabbitmq
    use                 default-service
}

<% end -%>

<% %w{nova-api nova-network nova-scheduler nova-compute glance-api glance-registry keystone}.each { |service |
 unless @service_hosts[service].nil?
-%>
define service {
    service_description <%=service %>
    hostgroup_name  <%=service %>
    check_command       check_nrpe!check_<%=service %>
    use                 default-service
}
<%
 end
}%>
